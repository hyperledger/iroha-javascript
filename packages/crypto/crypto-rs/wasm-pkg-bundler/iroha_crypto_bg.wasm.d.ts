/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function algorithm_default(): number;
export function __wbg_hash_free(a: number): void;
export function hash_zeroed(): number;
export function hash_new(a: number, b: number): void;
export function hash_bytes(a: number, b: number): void;
export function hash_bytes_hex(a: number, b: number): void;
export function __wbg_publickey_free(a: number): void;
export function publickey_from_multihash_hex(a: number, b: number, c: number): void;
export function publickey_from_bytes(a: number, b: number, c: number): void;
export function publickey_from_private_key(a: number): number;
export function publickey_to_multihash_hex(a: number, b: number): void;
export function publickey_payload(a: number, b: number): void;
export function publickey_payload_hex(a: number, b: number): void;
export function __wbg_privatekey_free(a: number): void;
export function privatekey_from_multihash_hex(a: number, b: number, c: number): void;
export function privatekey_from_bytes(a: number, b: number, c: number): void;
export function privatekey_algorithm(a: number): number;
export function privatekey_payload(a: number, b: number): void;
export function privatekey_payload_hex(a: number, b: number): void;
export function privatekey_to_multihash_hex(a: number, b: number): void;
export function __wbg_keypair_free(a: number): void;
export function keypair_random(a: number, b: number): void;
export function keypair_from_parts(a: number, b: number, c: number): void;
export function keypair_derive_from_seed(a: number, b: number, c: number): void;
export function keypair_derive_from_private_key(a: number, b: number): void;
export function keypair_algorithm(a: number): number;
export function keypair_public_key(a: number): number;
export function keypair_private_key(a: number): number;
export function __wbg_signature_free(a: number): void;
export function signature_from_bytes(a: number, b: number): void;
export function signature_new(a: number, b: number, c: number): void;
export function signature_verify(a: number, b: number, c: number, d: number): void;
export function signature_payload(a: number, b: number): void;
export function signature_payload_hex(a: number, b: number): void;
export function publickey_algorithm(a: number): number;
export function main_js(): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __wbindgen_start(): void;
